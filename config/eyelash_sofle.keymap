#define ZMK_POINTING_DEFAULT_MOVE_VAL 600  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 10   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/outputs.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 1 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 1 1>; };

&msc {
    acceleration-exponent = <0>;      // 0
    time-to-max-speed-ms = <500>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <1000>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};


/ {

    behaviors {
        rgb_encoder: rgb_encoder {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
        };

        scroll_encoder: scroll_encoder {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;
            tap-ms = <100>;
        };
    };


    keymap {
        compatible = "zmk,keymap";

        layer0 {
            bindings = <
&kp ESC           &kp N1              &kp N2              &kp N3           &kp N4           &kp N5        &mmv MOVE_UP     &kp N6     &kp N7     &kp N8     &kp N9           &kp N0      &kp BACKSPACE
&kp TAB           &kp Q               &kp W               &kp E            &kp R            &kp T         &mmv MOVE_DOWN   &kp Y      &kp U      &kp I      &kp O            &kp P       &kp BSLH
&kp GRAVE         &kp A               &kp S               &kp D            &kp F            &kp G         &mmv MOVE_LEFT   &kp H      &kp J      &kp K      &kp L            &kp SEMI    &kp APOS
&kp LSHFT         &kp Z               &kp X               &kp C            &kp V            &kp B         &mmv MOVE_RIGHT  &kp N      &kp M      &kp COMMA  &kp DOT          &kp FSLH    &kp RSHFT
&kp C_PLAY_PAUSE  &kp LEFT_BRACKET    &kp RIGHT_BRACKET   &kp LEFT_CONTROL &kp LEFT_ALT     &kp LEFT_GUI  &mkp LCLK        &kp SPACE  &sl 1      &kp MINUS  &kp EQUAL        &kp RETURN
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "Default";
        };

        layer_1 {
            bindings = <
&trans      &kp F1    &kp F2   &kp F3   &kp F4              &kp F5    &msc SCRL_UP     &kp C_PLAY_PAUSE &kp C_VOL_DN   &kp C_VOL_UP   &kp MINUS       &kp EQUAL  &kp DELETE
&trans      &kp F6    &kp F7   &kp F8   &kp F9              &kp F10   &msc SCRL_DOWN   &kp PG_UP        &kp HOME       &kp UP         &kp END         &kp LEFT_BRACKET  &kp RIGHT_BRACKET
&kp CAPS    &kp F11   &kp F12  &kp F13  &kp F14             &kp F15   &msc SCRL_LEFT   &kp PG_DN        &kp LEFT       &kp DOWN       &kp RIGHT       &trans     &trans
&trans      &trans    &trans   &trans   &kp LC(LEFT_ARROW)  &kp LC(RIGHT_ARROW)    &msc SCRL_RIGHT  &kp INSERT       &kp PSCRN      &kp SCROLLLOCK &kp PAUSE_BREAK &trans     &trans
&kp C_MUTE  &trans    &trans   &trans   &trans              &trans    &mkp RCLK        &trans           &sl 2         &trans         &trans          &trans
            >;

            display-name = "Function";
            sensor-bindings = <&inc_dec_kp LC(LEFT_ARROW) LC(RIGHT_ARROW)>;
        };

        layer_2 {
            bindings = <
&trans           &bt BT_SEL 0     &bt BT_SEL 1    &bt BT_SEL 2     &bt BT_SEL 3    &bt BT_SEL 4    &kp UP_ARROW     &trans  &trans  &trans &trans &trans &trans
&trans           &bt BT_CLR       &bt BT_CLR_ALL  &out OUT_TOG     &bootloader     &sys_reset      &kp DOWN_ARROW   &studio_unlock  &trans  &trans &trans &trans &trans
&rgb_ug RGB_TOG  &rgb_ug RGB_BRI  &rgb_ug RGB_EFF &rgb_ug RGB_HUI  &rgb_ug RGB_SAI &rgb_ug RGB_SPI &kp LEFT_ARROW   &trans  &trans  &trans &trans &trans &trans
&trans           &rgb_ug RGB_BRD  &rgb_ug RGB_EFR &rgb_ug RGB_HUD  &rgb_ug RGB_SAD &rgb_ug RGB_SPD &kp RIGHT_ARROW  &trans  &trans  &trans &trans &trans &trans
&trans           &trans           &trans          &trans           &trans          &trans          &kp ENTER        &trans  &tog 3  &trans &trans &trans
            >;
            display-name = "Feature";
            sensor-bindings = <&rgb_encoder>;
        };

        layer_3 {
            bindings = <
&trans  &trans  &trans            &trans        &trans      &trans      &kp UP_ARROW    &trans          &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans            &trans        &trans      &trans      &kp DOWN_ARROW  &trans          &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans            &trans        &trans      &trans      &kp LEFT_ARROW  &trans          &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans            &trans        &trans      &trans      &kp RIGHT_ARROW &trans          &trans  &trans  &trans  &trans  &trans
&trans  &trans  &kp LEFT_CONTROL  &kp LEFT_ALT  &kp SPACE   &kp SPACE   &trans          &kp LEFT_GUI    &tog 3  &trans  &trans  &trans
            >;
            display-name = "Game";
            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;            
        };
    };
};
